0.유니티용어
-게임오브젝트: 게임오브젝트 메뉴로 생성되는것.
-하이라키(계층구조): 씬상에 모든 오브젝트가 표시되는 것.
-씬: 하나의 게임장면 오브젝트를 배치할수있다.
-인스펙터: 오브젝트의 상세 정보를 보여준다.
-트랜스폼: 변형. 상태나 형태가 바뀌는 것.
-스케일: 특별한 경우가 아니면 변경할 일이없다.
-포지션:
-로테이션:
-스크립트: 게임이 실행하는중에 인스펙터의 값을 변경하는데 사용함.
-프로젝트: 프로젝트 폴더내에 에셋폴더에 있는 것들을 보여주는것.
-리지드바디(강체): 물리에서 힘을 받는 대상을 의미함. 
-컴포넌트: 미리작성된 기능을 내가 원하는 오브젝트에 추가하는것.
-트리거: 충돌체크는 가능하지만, 통과되는 대상
-콜라이더: 게임안에서 물체가 충돌되게 만드는 컴포넌트.
-태그: 어떤 물체의 분류를 설정할때 사용함.
-OnTrigger/Collision: 트리거나 콜라이더가 충돌체크될때 실행되는 함수.
-참조: 다른객체(게임오브젝트,스크립트)를 다른 스크립트에서 사용하는것.
-프리팹: 게임오브젝트에 추가된 컴포넌트나 스크립트를 포함하여 저장하고 필요할때 불러오는것.
-스프라이트렌더러-oder in layer:랜더링순서 지정(음수가능)
-코루틴: 일정시간이후에 코드를 실행가능하도록 만들수있음.
-생명주기: 유니티에 메세지함수가 호출되는 순서
-오버랩: 물리없이 충돌체크
-레이어: 게임오브젝트이 대상을 분류하는기능. 물리충돌시 특정 레이어만 충돌체크 가능.

1. 맵구성하기
-타일맵, 타일팔레트
-타일맵: GameObject > 2DObecject > Tilemap
-타일팔레트: Window > 2D > Tile Palette
*툴을 다루는 방법은 기록보다도 많이 경험해보는 것이 중요하다!
*툴이 어디있는지 모를땐 시간이 걸리더라도 하나하나 눌러보고 어디있는지 찾으면됨.
*이 과정이 반복되면 절대로 잊어버리지않고, 잊어버려도 금방 찾을수있음.

2.플레이어 생성
-써니랜드 에셋에서 플레이어를 장면에 드래그엔 드롭한다.
-플레이어(게임오브젝)의 인스펙터 창에 transform에 postion을 수정한다.
-(게임이 실행되는 중:런타임)에 오브젝트의 인스펙터를 수정할 수 있어야한다.
-스크립트를 생성하고 해당스크립트를 플레이어안에 드래그앤드롭한다.
-1.플레이어의 오른쪽 이동이 있다면 코드의 일부분을 바꿔서 다른방향으로 바꿀수있다.
-2(중급자-전공자정도 수준).키보드입력, 위치를 이동하는데 벡터를 더하면된다.
-3(상급자-전공생도 1~2명있을까말까).벡터의 개념와 deletaTime의 개념을 이해하고 내가 원하는 움직을 만들수있다.


3.점프
-위로 이동시 케릭터가 통통튄다 != 점프한다?
-통통튄다 -> 공이 여러번 위로 올라온다. -> 이동을해도 중력때문에 떨어지고, 지속적으로 이동하면서 계속 튀는것으로 보인다.
-이동속도보다 더멀리 보내보기 -> 블링크. 특정위치로 순간 이동한뒤 떨어진다. -> 점프는 아님!
-점프한다 -> 한번 뛰어 오른다.
-물체에 위로 힘을 가하는것 -> (리지드바디:컴포넌트)에 (위:up)로 힘을 (점프력:JumpPower)만큼 추가한다.

4.플렛폼만들기
-플렛폼으로 쓸오브젝트를 타일맵을 사용하지않고, 직접 배치 (각 오브젝트가 파괴되어야할수있으므로)
-플렛포머이펙트추가 ->콜라이더 플렛포머 이펙트 체크(에러매세지에서 안내함) -> 정상작동되는 인스펙터와 안되는 인스펙터를 비교해야함.

5.아이템만들기
-아이템을 먹는다 -> (아이템:오브젝트)에 (부딧히면:충돌체크) (플레이어:스크립트)가 점수를 획득하고 아이템삭제된다. -> 아이템이 통과되지않는다.
-아이템에 가까이가면 점수를 획득한다. -> 점수획득후 (아이템:오브젝트)이 삭제된다.
-유니티 오브젝트 삭제 -> 검색 -> 코드를 찾음(스크립팅API).
-일정시간뒤에 플레이어가 삭제됨. -> 삭제할때 자기자신의 게임오브젝트를 넣음(문제) -> 충돌된 대상의 게임오브젝트를 넣고, 딜레이를 제거(해결)
-플레이어에서 충돌체크되었을때, 아이템의 이름이나 태그를 확인하여 점수 넘겨줌. -> 아이템종류가 늘어날때마다 코드량이 증가한다. -> Item스크립트 추가.

6.사다리
-사다리: 오르내일수있는 물건. -> (사다리)를 (탈때:사다리에 충돌:했을때)는 무엇이다른가? 
 (위아래키를이용하여 이동)한다. 
-사다리에 머무를때 키를 사용한다 -> 통통튄다 -> 중력X, 사다리를 나갈때 중력 O
-사다리에 나가면 미끄러진다.
-사다리진입후 일정시간이 지나면 키입력이 안됨 -> 충돌체크최적화로 더이상 호출되지않음.
-사다리진입(Enter)-사다리있음 -> 사다리나갈때(Exit)-사다리없음 -> 사다리있을때: 키입력 
-점프할때 사다리 진입시 붙음.

문제1) 플랫폼위에서 아래로 내려가기(▼ + 점프)

7.몬스터 추가하기
-가장 간단하며 배운지식으로 만들수있는 주머니쥐를 선정한다.
-왼쪽으로 이동한다.
-몬스터에게 (닿이면:충돌체크 콜리션엔터) 플레이어가 죽는다.

8.총만들기
-총?총알을 발사하여 몬스터를 제압한다. -> 총알에 맞으면 몬스터가 죽는다.
-(총알:게임오브젝트)은 어떻게 움직이는가? 총알에 오른쪽으로 힘을 가하면 날아간다. -> 리지드바디
-총알을 발사하려면 총이 필요함 -> 적절한 리소스구하기  
-총알에 힘을 가한다 -> 하나의 총알에 힘을 준다 -> 공
-(총알:게임오브젝트)을 복제하여 힘을 가한다.
-투척무기가같음 -> 중력제거, 트리거화
-몬스터가 총알에 닿으면 사망 -> 총알스크립트 추가후 충돌시 몬스터면 삭제
-총알이 삭제되지않고 계속 늘어난다. -> 생성시 일정시간이후에 삭제 -> 원본오브젝트삭제 -> 프리팹등록하기

문제2) 플레이어나 몬스터가 바닥에 떨어지면 죽게 만들기
-(플레이어)나 (몬스터:게임오브젝트)가 바닥에 떨어지면 (죽음:삭제)
-바닥에 떨어지면? y축이 바닥보다 낮을때, 바닥에 무엇인가에 (부딧:콜라이더)혔을때

9.부활하기
-부활? (플레이어:게임오브젝트)가 (죽었다:삭제될때) (살아남:생성).
-게임오브젝트가 삭제될때 다시 생성된다. 몬스터에게 죽음.떨어져 죽음.
-> 게임오브젝트가 삭제된 후에는 복제가 불가능하므로, 삭제되기전에 파일에서 로드하고 다시 복제한다.
-간판을 만들고 (플레이어가 삭제)되면, 간판 위치에서 (플레이어:게임오브젝트)가 생성되게 만든다.
->플레이어가 죽자마자 살아나 계속죽음. -> 일정시간이후에 부활 -> 일정시간->코루틴

문제3)개구리만들기
-개구리 -> 계속 점프한다 -> 업데이트 -> 땅에 닿았을때마다 점프를 한다 -> 메뚜기

10.독수리
-비행형몬스터: 
-계획1.위에서 간보다가 공격할틈이 생기면 공격한다.
-간을본다? 플레이어주변을 서성거린다.
-공격할틈을 본다? 플레이어를 관찰하고 상태를 파악한다. -> 플레이어에 상태가 없음. -> 해아할것이 많음.
-계획2. (플레이어:대상)를 (발견)하면 플레이어를 (추적)한다.
-발견? (대상)을 찾음. 대상을 눈(실시간)으로 확인한다. 실시간? 지속적으로 관찰한다.
-추적? (대상)을 쫓아감. 대상과의 거리를 구하고 평준화해서 방향을 구한후, 해당방향으로 이동한다.
-독수리가 총알에 맞으면 시야(트리거)범위에 맞아도 삭제된다. -> FixedUpdate, 오버랩, 레이어
-독수리가 플레이어를 공격하도록 만들기/총알 맞도록 만들기/독수리 부활하기
-독수리가 플레이어가 죽으면 그자리에서 멈춘다 -> 제자리(리스폰위치)로 돌아간다. 
 -> 타겟을 (리스폰위치:게임오브젝트)로 변경한다.
-카메라가 플레이어를 쫓아가게 만들기 -> 플레이어가 죽으면 부활한 플레이어 쫓아가게 만들기
-정찰: 지정된위치에서 특정위치를 오고 가는 것. -> 타겟을 지정하면 해당위치로 이동한다.
-A:시작,B:정창 A에서 B로 이동(타겟을 지정)하고, B에 도착했을때 A로 이동
-A에서 출발하여 B에 (도착:???)하면, 타겟을 A로 만든다.
-B에서 출발하여 A에 도착하면, 타겟을 B로 만든다.
*유한상태머신: 대상의 상태를 변경하면 해당 동작을 수행할수있도록 만드는 방법.

11.게임관리자
-게임에 등장하는 오브젝트들을 통합 관리하고, 서로 상호작용해야할 부분에 관여한다.
-독수리가 살아났을때 만약 돌아갈위치가 설정되어있지않다면, 돌아갈위치, 정찰위치를 설정한다.
-플레이어가 사망하면 살아난 플레이어를 추적한다.

문제3) 플레이어가 오른쪽과 왼쪽을 쏘려면 어떻게 해야하는가?
케릭터를 180도 회전시킨다. 왼쪽 키를 누루면, 오른쪽키를 누르면?  180?

12.RPG?
-성장요소가 있다. -> 로그라이크 -> 로그라이트
-렙 스텟, 장비
-데미지는 정상작동하나, 플레이어가 밀려남 -> 레이어,오버랩,충돌체크방지
-데미지가 들어가나 매프레임당 들어감 -> 무적모드로 변경해야한다.
-무적모드? (일정시간)동안 데미지를 받지않는 상태 -> 대상이 무적이라면 공격을 하지않음.
-사망? 공격받을때 -> 이이외의 죽는 상황은 대응이 안됨. -> 업데이트에서 사용.
-성장? 렙업, 장비 -> 랩업 -> 경험치가 일정이상되면 렙이 오름. 능력치가 상승함.

문제4) life x 3개 추가하고 life x 0이되면 게임오버화면을 보여준다.
-life: 게임안에서 플레이어가 사망해도 부활 하는 횟수.
-플레이어 유지X -> 게임관리자 유지O ->  정수
-life는 플레이어가 죽었을때 1씩 감소한다. 0이되면 (게임오버화면을 보여준다.)

문제5) 문에 도착했을때 점프키를 누르면 엔딩을 본다.
-문에 트리거 추가
-문에 안에 있는지 없는지 상태 확인
-문안에 있다면 점프대신 씬을 바꿈

13.능력치 바 만들기
-크기를 조절할 능력치 바 -> RectTransform
-월드캔버스를 이용하여 몬스터 밑에 HP표시하기
-GUIStateBar의 초기화가 start에서 불리는데 업데이트되기전에 불리지 못해, 
 크기조절된뒤에 초기 GUIStateBar를 각 사용하는 객체에의 start에서 호출하기
-크기가조절되지않을 바에 배경크기를 조절이용하여 최대크기로 사용하기
※유니티에 콜백함수를 이용할 때, 해당호출순서나 시점을 정확하게 이해못하는 경우,
  버그가 발생할수있다. 이런경우 호출시점을 명확하게 제어하거나. 문제될만한 부분은 사용하지않는편이 낫다.

14. 도감(인벤토리) 만들기
1) 도감에 기록될 정보 생성하기
-플레이어가 삭제되어도 유지되어야 하므로 도감리스트를 게임관리자에 추가한다.
-추가한 도감에서 값을 가져오거나, 추가가능하고, 임시UI에서 확인가능한 함수를 추가한다,
-몬스터가 죽을때 도감에 추가되도록 만든다.
2) 몬스터 관리자(데이터베이스) 만들기
-몬스터의 정보를 관리할수 있도록 구조체를 추가한다.
-위 생성정보를 서칭이 쉽도록 딕셔너리를 이용하여 생성한다.
-몬스터의 정보를 가져오는 함수와 모든값을 초기화 하는 함수를 생성한다.
3)인벤토리GUI를 구성한다.
-GUI에 컨트롤에 필요한 구성요소를 제어하는 스크립트를 추가한다.
-1)에서 생성된 정보를 가져와 인벤토리를 열때마다 버튼을 생성하고 추가한다.
-2)에서 생성된 정보를 가져와 인벤토리에 해당몬스터의 정보를 보여줄 GUI를 제어하는 스크립트를 작성한다.

15.레이저건 만들기
-Raycast를 이용하면 물체와 직선의 충돌이 되었는지 확인할수있다.
-1의 충돌체크를 활용하여 레이저건을 만드는데, 충돌된경우는 맞은 대상의 위치를 받아와서 길이를 짧게 만들고 아닐경우 레이의 끝위치까지 디버그라인으로 그려본다.
-실제로 볼수있는 레이를 만들기위해서 라인렌더를 이용하여 보이도록 수정한다.